{"version":3,"sources":["context/TeamsContext.js","components/predictGame.js","components/Schedule.js","components/Predictor.js","components/Rankings.js","components/Header.js","App.js","index.js"],"names":["TeamsContext","createContext","predictGame","home","away","avg","homeESG","homePPG","homeG","awayESG","awayPPG","awayG","homeWP","Math","round","evenStrengthxGF","evenStrengthxGA","evenStrengthSVP","powerPlayGF","penaltyKillxGA","penaltyKillSVP","pythagenpat","awayWP","Schedule","scoresToRender","teams","useContext","dateObj","Date","month","getMonth","day","getDate","year","getFullYear","useState","scores","setScores","date","setDate","getScores","a","console","log","fetch","response","json","jsonData","games","dates","forEach","addPrediction","item","result","team","id","useEffect","map","score","class","src","alt","name","xG","winPercentage","status","detailedState","onClick","split","d","temp","subtractDay","addDay","Predictor","homeTeamList","awayTeamList","homeTeam","setHomeTeam","awayTeam","setAwayTeam","prediction","setPrediction","Object","keys","key","type","checked","value","onChange","e","animate","reveal","center","viewBoxSize","lineWidth","paddingAngle","totalValue","lengthAngle","startAngle","labelPosition","labelStyle","fontSize","label","dataEntry","percentage","data","title","color","Rankings","rankingsList","teamList","entries","push","winP","sort","b","teamA","teamB","comparison","indexOf","Header","to","App","getStats","teamStats","teamMap","i","length","setTeams","hashType","className","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbd640cf.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\n\nexport const TeamsContext = createContext(null);","export function predictGame(home, away, avg) {\n\n    var homeESG = 0\n    var homePPG = 0\n    var homeG = 0\n    var homeWP = 0\n    var awayESG = 0\n    var awayPPG = 0\n    var awayG = 0\n    var awayWP =  0\n\n\n    //homeESG = Math.round(((home.evenStrengthxGF/2 + away.evenStrengthxGA/2) + (home.evenStrengthxGF - avg.evenStrengthxGF) + (away.evenStrengthxGA - avg.evenStrengthxGA))*10)/10\n    //awayESG = Math.round(((away.evenStrengthxGF/2 + home.evenStrengthxGA/2) + (away.evenStrengthxGF - avg.evenStrengthxGF) + (home.evenStrengthxGA - avg.evenStrengthxGA))*10)/10\n\n    homeESG = Math.round((((home.evenStrengthxGF / avg.evenStrengthxGF) * away.evenStrengthxGA/2) + avg.evenStrengthxGF/2) * (1 + (1 - away.evenStrengthSVP/100)) * 93)/100\n    awayESG = Math.round((((away.evenStrengthxGF / avg.evenStrengthxGF) * home.evenStrengthxGA/2) + avg.evenStrengthxGF/2) * (1 + (1 - home.evenStrengthSVP/100)) * 87)/100\n    homePPG = Math.round((((home.powerPlayGF / avg.powerPlayGF) * away.penaltyKillxGA/2) + avg.powerPlayGF/2) * (1 + (1 - away.penaltyKillSVP/100)) * 103)/100\n    awayPPG = Math.round((((away.powerPlayGF / avg.powerPlayGF) * home.penaltyKillxGA/2) + avg.powerPlayGF/2) * (1 + (1 - home.penaltyKillSVP/100)) * 97)/100\n    homeG = Math.round((homeESG + homePPG)*100)/100\n    awayG = Math.round((awayESG + awayPPG)*100)/100\n\n    //Calculate pythagenpat exponent\n    var pythagenpat = (homeG + awayG) ** .458\n\n    //Calculate win percentage\n    var homeWP = Math.round((homeG ** pythagenpat / (awayG ** pythagenpat + homeG ** pythagenpat))*1000)/100\n    var awayWP = Math.round((10 - homeWP)* 100)/100\n    \n    var result = {\n        homeESG:  homeESG,\n        homePPG: homePPG,\n        homeG: homeG,\n        homeWP: homeWP,\n        awayESG:  awayESG,\n        awayPPG: awayPPG,\n        awayG: awayG,\n        awayWP: awayWP\n      };\n      // Return it\n      return result;\n}","import React, { useEffect, useState, Fragment, useContext } from 'react';\nimport { TeamsContext } from \"../context/TeamsContext\";\nimport { predictGame } from '../components/predictGame'\n\nconst Schedule = () => {\n    const teams = useContext(TeamsContext)\n    var dateObj = new Date();\n    var month = dateObj.getMonth() + 1; //months from 1-12\n    var day = dateObj.getDate();\n    var year = dateObj.getFullYear();\n    const [scores, setScores] = useState([]);\n    const [date, setDate] = useState(year + \"-\" + month + \"-\" + day);\n\n    const getScores = async () => {\n\n        try {\n\n            console.log(\"new Date: \" + date);\n            const response = await fetch(\"https://statsapi.web.nhl.com/api/v1/schedule//?date=\" + date);\n            const jsonData = await response.json();\n            var games = jsonData.dates[0].games;\n            \n            games.forEach(addPrediction)\n\n            setScores(games);\n            \n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    function addPrediction(item) {\n        let result = predictGame(teams[item.teams.home.team.id], teams[item.teams.away.team.id], teams[0])\n        item.teams.home['winPercentage'] = result.homeWP;\n        item.teams.home['xG'] = result.homeG;\n        item.teams.away['winPercentage'] = result.awayWP;\n        item.teams.away['xG'] = result.awayG;\n    }\n\n    function addDay() {\n        var a = date.split(/[^0-9]/);\n        var d = new Date (a[0],a[1]-1,a[2]);\n        let temp = new Date(d);\n        temp.setDate(temp.getDate() + 1);\n        setDate(temp.getFullYear() + \"-\" + (temp.getMonth() + 1) + \"-\" + temp.getDate());   \n    }\n\n    function subtractDay() {\n        var a = date.split(/[^0-9]/);\n        var d = new Date (a[0],a[1]-1,a[2]);\n        let temp = new Date(d);\n        temp.setDate(temp.getDate() - 1);\n        setDate(temp.getFullYear() + \"-\" + (temp.getMonth() + 1) + \"-\" + temp.getDate());\n    }\n\n\n\n    useEffect(() => {\n        getScores();\n    }, [date])\n\n\n    let scoresToRender;\n    if (scores) {\n      scoresToRender = scores.map(score => {\n        return <div class=\"score\">\n            <div></div>\n        <div class=\"logoDiv\">\n        <img src={\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + score.teams.home.team.id + \".svg\"} alt={score.teams.home.team.name} class=\"teamLogo\"></img>\n        </div>\n        <div class=\"scoreDetails\">\n            <h2>Expected</h2>\n            <div class=\"scoreDetailsRow\">\n                <h2>{score.teams.home.xG}</h2> \n                <h4>{score.teams.home.winPercentage > 5 && <div>{score.teams.home.team.name} {score.teams.home.winPercentage * 10}%</div>}</h4>\n                <h4>{score.teams.home.winPercentage <= 5 && <div>{score.teams.away.team.name} {score.teams.away.winPercentage * 10}%</div>}</h4>\n                <h2>{score.teams.away.xG}</h2> \n            </div>\n            <h2>Result</h2>\n            <div class=\"scoreDetailsRow\">\n                <h1>{score.teams.home.score}</h1>\n                <h4>{score.status.detailedState}</h4>\n                <h1>{score.teams.away.score}</h1>\n            </div>\n        </div>\n        <div class=\"logoDiv\">\n        <img src={\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + score.teams.away.team.id + \".svg\"} alt={score.teams.away.team.name} class=\"teamLogo\"></img>\n        </div>\n        <div></div>\n        </div>\n      });\n    }\n\n\n\nreturn (\n    <Fragment>\n        <div class=\"scheduleMarker\">\n            Schedule\n        </div>\n        <div class=\"date\">\n        <h1>{date}</h1>\n        </div>\n    <div class=\"scores\">{scoresToRender}</div>\n    <div class=\"bottomButtons\"><button class=\"bottomButton\" onClick={() => subtractDay()}>Previous Day</button> <button class=\"bottomButton\" onClick={() => addDay()}>Next Day</button></div>\n    </Fragment>\n    );\n};\n\nexport default Schedule;","import React, {Fragment, useState, useContext} from \"react\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { TeamsContext } from \"../context/TeamsContext\";\nimport { predictGame } from '../components/predictGame'\n\nconst Predictor = () => {\nconst [homeTeam, setHomeTeam] = useState(1);\nconst [awayTeam, setAwayTeam] = useState(2);\nconst teams = useContext(TeamsContext)\nconst [prediction, setPrediction] = useState(predictGame(teams[1],teams[2], teams[0]));\n\nlet homeTeamList;\nif (teams) {\n  homeTeamList = Object.keys(teams).map(function(key){\n    return <div class=\"selection\">\n        {key > 0 && <div>\n            <label>\n            <input \n                type=\"radio\"\n                checked ={homeTeam == key}\n                value={homeTeam}\n                onChange={(e)=>{\n                    setHomeTeam(key)\n                    setPrediction(predictGame(teams[key], teams[awayTeam], teams[0]))\n                    }}/>\n                <img src={\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + key + \".svg\"}/>\n            </label>\n        </div>\n        }\n    </div>\n  });\n}\n\nlet awayTeamList;\nif (teams) {\n  awayTeamList = Object.keys(teams).map(function(key){\n    return <div class=\"selection\">\n        {key > 0 && <div>\n            <label class=\"selectorLabel\">\n            <input \n                type=\"radio\"\n                checked ={awayTeam == key}\n                value={awayTeam}\n                onChange={(e)=>{\n                    setAwayTeam(key)\n                    setPrediction(predictGame(teams[homeTeam], teams[key], teams[0]))\n                    }}/>\n                <img src={\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + key + \".svg\"}/>\n            </label>\n        </div>\n        }\n    </div>\n  });\n}\n\nreturn (\n    <Fragment>\n        {teams && <div>\n        <div class=\"predictorMarker\">\n            predictor\n        </div>\n        <div class=\"predictor\">\n            <div class=\"selector\">\n                <h1>Home</h1>\n                <div class=\"selections\">\n                    {homeTeamList}\n                </div>\n            </div>\n            <div class=\"predictorStats\">\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                <div class=\"scoreDetailsRow\">\n                    <h4>{teams[homeTeam].team}</h4>\n                    <h1>Team</h1>\n                    <h4 class=\"away\">{teams[awayTeam].team}</h4>\n                </div>\n                <div class=\"scoreDetailsRow\">\n                    <h2>{prediction.homeESG}</h2>\n                    <h4>Expected Even Strength Goals</h4>\n                    <h2 class=\"away\">{prediction.awayESG}</h2>\n                </div>\n                <div class=\"scoreDetailsRow\">\n                    <h2>{prediction.homePPG}</h2>\n                    <h4>Expected Power Play Goals</h4>\n                    <h2 class=\"away\">{prediction.awayPPG}</h2>\n                </div>\n                <div class=\"scoreDetailsRow\">\n                    <h2>{prediction.homeG}</h2>\n                    <h4>Expected Score</h4>\n                    <h2 class=\"away\">{prediction.awayG}</h2>\n                </div>\n                <div class=\"predictorChart\">\n                <PieChart animate reveal center={[100, 100]} viewBoxSize={[200, 200]} lineWidth=\"25\" paddingAngle=\"1\" totalValue={10} lengthAngle={-180} startAngle={0} labelPosition={120} labelStyle={{fontSize: 14}} label={({ dataEntry }) => `${Math.round(dataEntry.percentage * 10)/10} %`}\n\n                data={[\n                    { title: teams[homeTeam].team, value: prediction.awayWP, color: '#666' },\n                    { title: \"\", value: prediction.homeWP, color: '#000000' }\n                ]}\n                /></div>\n\n            </div>\n            <div class=\"selector\">\n                <h1 class=\"away\">Away</h1>\n                <div class=\"selections\">\n                    {awayTeamList}\n                </div>\n            </div>\n        </div>\n        </div>\n}\n    </Fragment>\n\n    );\n};\n\nexport default Predictor;","import React, {Fragment, useContext} from \"react\";\nimport { TeamsContext } from \"../context/TeamsContext\";\nimport { predictGame } from '../components/predictGame';\n\nconst Rankings = () => {\n\n    const teams = useContext(TeamsContext)\n    var winP = 0\n    let teamList = []\n    \n    for (const [key, value] of Object.entries(teams)) {\n        teams[key]['winP'] = predictGame(teams[key], teams[0], teams[0]).homeWP\n        if(key!=0){\n            teamList.push([teams[key].winP, teams[key].team, key])\n        }\n      }\n    \n      function compare(a, b) {\n        // Use toUpperCase() to ignore character casing\n        const teamA = a[0];\n        const teamB = b[0];\n      \n        let comparison = 0;\n        if (teamA > teamB) {\n          comparison = -1;\n        } else if (teamA < teamB) {\n          comparison = 1;\n        }\n        return comparison;\n      }\n      \n      teamList.sort(compare);\n\n    \nconsole.log(\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + teamList[0][2] + \".svg\")\n\nlet rankingsList;\nif (teamList) {\n    rankingsList = teamList.map(team => {\n    return <tr class=\"selection\">\n        {<tr>\n            <td>{teamList.indexOf(team)+1}</td>\n            <td> <img class=\"tableImg\" src={\"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\" + team[2] + \".svg\"} /></td>\n            <td>{team[1]}</td>\n        </tr>\n        }\n    </tr>\n  });\n}\n\nreturn (\n    <Fragment>\n        <div class=\"rankingsMarker\">\n            rankings\n        </div>\n        <div class=\"rankingsTable\">\n            <table>\n        <tr><th></th><th></th><th></th></tr>\n            {rankingsList}\n            </table>\n        </div>\n    </Fragment>\n    );\n};\n\nexport default Rankings;","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../App.css';\n\nconst Header = () => {\n\nreturn (\n    <Fragment>\n        <div class=\"header\">\n\n            <Link to=\"/schedule\" class=\"headerItem\"><h1 class=\"headerText\">Schedule</h1></Link>\n\n            <Link to=\"/\" class=\"headerItem\"><h1 class=\"headerText\">Predictor</h1></Link>\n            <Link to=\"/rankings\" class=\"headerItem\"><h1 class=\"headerText\">Power Rankings</h1></Link>\n        </div>\n        </Fragment>\n    );\n};\n\nexport default Header;","import React, {Fragment, useState} from 'react';\nimport './App.css';\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\n\n// Components\n\nimport Schedule from \"./components/Schedule\";\nimport Predictor from \"./components/Predictor\";\nimport Rankings from \"./components/Rankings\";\nimport Header from \"./components/Header\";\nimport { TeamsContext } from './context/TeamsContext';\n\n\nfunction App() {\n\n  const getStats = async () => {\n\n    try {\n\n        const response = await fetch(\"https://kxbiyq2zxl.execute-api.us-east-2.amazonaws.com/v1/current-stats\");\n        const data = await response.json();\n        const teamStats = data.teams\n        let teamMap = {};\n        for (var i = 0; i < teamStats.length; i++) {\n          teamMap[teamStats[i].id] =  {team: teamStats[i].team, evenStrengthxGF: teamStats[i].evenStrengthxGF, evenStrengthxGA: teamStats[i].evenStrengthxGA, evenStrengthSVP: teamStats[i].evenStrengthSVP, penaltyKillSVP: teamStats[i].penaltyKillSVP, penaltyKillxGA: teamStats[i].penaltyKillxGA, powerPlayGF: teamStats[i].powerPlayGF}\n      }\n\n        //teamStats.forEach(console.log())\n\n        setTeams(teamMap);\n        \n    } catch (err){\n        console.log(err);\n    }\n}\n\n\nconst [teams, setTeams] = useState([\"empty\"])\nif (teams == \"empty\"){\n  getStats()\n}\n\n\n  return (\n    <Fragment>\n      {teams != \"empty\" && <div>\n      <Router  hashType='noslash'>\n      <Header />\n\n        <div className=\"container\">\n          \n            <TeamsContext.Provider value={teams}>\n              <Route exact path=\"/\" component={Predictor} />\n\n              <Route exact path=\"/schedule\" component={Schedule} />\n\n\n              <Route exact path=\"/rankings\" component={Rankings} />\n\n            </TeamsContext.Provider>\n         \n        </div>\n      </Router>\n      </div>}\n    </Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}